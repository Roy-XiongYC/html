<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.person.web.repository.BlogAboutMapper">
<resultMap id="BaseResultMap"  type="com.person.web.blog.model.BlogAbout" >
	<result column="id" property="id" jdbcType="VARCHAR" />
	<result column="user_id" property="userId" jdbcType="VARCHAR" />
	<result column="about_content" property="aboutContent" jdbcType="VARCHAR" />
	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	<result column="opeate_time" property="opeateTime" jdbcType="TIMESTAMP" />
</resultMap> 
<sql id="Criteria_Where_Clause"> 
	<where> 
		<if test="params.id!=null">
			 and id=#{params.id}
		</if>
		<if test="params.userId!=null">
			 and user_id=#{params.userId}
		</if>
		<if test="params.aboutContent!=null">
			 and about_content=#{params.aboutContent}
		</if>
		<if test="params.createTime!=null">
			 and create_time=#{params.createTime}
		</if>
		<if test="params.opeateTime!=null">
			 and opeate_time=#{params.opeateTime}
		</if>
	</where> 
</sql> 
<sql id="Base_Column_List">
  id,user_id,about_content,create_time,opeate_time
</sql> 
<select id="queryPage" resultMap="BaseResultMap" parameterType="com.person.framework.mybatis.Criteria"> 
	select 
	<include refid="Base_Column_List" />
	from t_blog_about
	<if test="params != null"> 
		<include refid="Criteria_Where_Clause" /> 
	</if> 
	<if test="orderBy!=null"> 
		order by ${orderBy} 
	</if> 
</select> 
<select id="queryPageCount" resultType="java.lang.Integer" parameterType="com.person.framework.mybatis.Criteria"> 
	select count(1) from t_blog_about 
	<if test="params != null"> 
		<include refid="Criteria_Where_Clause" /> 
	</if> 
</select> 
<select id="queryEntity" resultMap="BaseResultMap" parameterType="java.lang.String">
	select 
	<include refid="Base_Column_List" />
	from t_blog_about	where id = #{id}
</select>
<select id="queryEntityByUser" resultMap="BaseResultMap" parameterType="java.lang.String">
	select 
	<include refid="Base_Column_List" />
	from t_blog_about	where user_id in (select user_id from t_blog_user where user_sign =#{userSign})
</select>
<insert id="insert" parameterType="com.person.web.blog.model.BlogAbout"> 
	insert into t_blog_about
	<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="id != null"> 
			id,
		</if>
		<if test="userId != null"> 
			user_id,
		</if>
		<if test="aboutContent != null"> 
			about_content,
		</if>
		<if test="createTime != null"> 
			create_time,
		</if>
		<if test="opeateTime != null"> 
			opeate_time,
		</if>
	</trim>
	values
	<trim prefix="(" suffix=")" suffixOverrides=",">
	<if test="id != null"> 
		#{id},
	</if>
	<if test="userId != null"> 
		#{userId},
	</if>
	<if test="aboutContent != null"> 
		#{aboutContent},
	</if>
	<if test="createTime != null"> 
		#{createTime},
	</if>
	<if test="opeateTime != null"> 
		#{opeateTime},
	</if>
	</trim>
</insert>
<update id="updateByCriteria" parameterType="com.person.framework.mybatis.Criteria">
	update t_blog_about
	<set>
	<if test="record.id != null"> 
		id = #{record.id},
	</if>
	<if test="record.userId != null"> 
		user_id = #{record.userId},
	</if>
	<if test="record.aboutContent != null"> 
		about_content = #{record.aboutContent},
	</if>
	<if test="record.createTime != null"> 
		create_time = #{record.createTime},
	</if>
	<if test="record.opeateTime != null"> 
		opeate_time = #{record.opeateTime},
	</if>
	</set>
	<if test="params != null">
		<include refid="Criteria_Where_Clause" />
	</if>
</update>
<delete id="deleteByCriteria" parameterType="com.person.framework.mybatis.Criteria">
	delete from t_blog_about
	<if test="params != null">
		<include refid="Criteria_Where_Clause" />
	</if>
</delete>
<delete id="deleteById" parameterType="java.lang.String">
	delete from t_blog_about
	where id = #{id}
</delete>
</mapper>
